"""
Script de Inicializa√ß√£o do Banco de Dados
Cria todas as tabelas necess√°rias e dados iniciais
"""

from app import app, db
from models import User, Bot, BotConfig, Gateway, Payment
import os
import secrets
import string

def init_database():
    """Inicializa o banco de dados"""
    with app.app_context():
        print("üîß Criando tabelas do banco de dados...")
        db.create_all()
        print("‚úÖ Tabelas criadas com sucesso!")
        
        # Verificar se j√° existe usu√°rio admin
        admin = User.query.filter_by(username='admin').first()
        
        if not admin:
            print("\nüîß Criando usu√°rio administrador padr√£o...")
            
            # ============================================================================
            # CORRE√á√ÉO #3: SENHA ADMIN SEGURA E ALEAT√ìRIA
            # ============================================================================
            def generate_secure_password(length=24):
                """Gera senha aleat√≥ria forte com letras, n√∫meros e s√≠mbolos"""
                alphabet = string.ascii_letters + string.digits + "!@#$%&*+-="
                return ''.join(secrets.choice(alphabet) for _ in range(length))
            
            admin_password = generate_secure_password(24)
            
            admin = User(
                email='admin@botmanager.com',
                username='admin',
                full_name='Administrador',
                is_admin=True,
                is_verified=True,
                is_active=True
            )
            admin.set_password(admin_password)
            db.session.add(admin)
            db.session.commit()
            
            # ‚úÖ SALVAR SENHA EM ARQUIVO SEGURO (gitignore)
            credentials_file = '.admin_password'
            with open(credentials_file, 'w', encoding='utf-8') as f:
                f.write("=" * 60 + "\n")
                f.write("CREDENCIAIS ADMINISTRATIVAS - grimbots\n")
                f.write("=" * 60 + "\n\n")
                f.write(f"Email:    admin@botmanager.com\n")
                f.write(f"Username: admin\n")
                f.write(f"Senha:    {admin_password}\n\n")
                f.write("‚ö†Ô∏è  GUARDE ESTE ARQUIVO EM LOCAL SEGURO\n")
                f.write("‚ö†Ô∏è  NUNCA COMPARTILHE ESTAS CREDENCIAIS\n")
                f.write("‚ö†Ô∏è  ALTERE A SENHA AP√ìS O PRIMEIRO LOGIN\n")
                f.write("=" * 60 + "\n")
            
            print("‚úÖ Usu√°rio admin criado:")
            print("   Email:    admin@botmanager.com")
            print("   Username: admin")
            print(f"   Senha:    {admin_password}")
            print(f"\nüîí Credenciais salvas em: {credentials_file}")
            print("   ‚ö†Ô∏è  GUARDE ESTE ARQUIVO EM LOCAL SEGURO!")
            print("   ‚ö†Ô∏è  ALTERE A SENHA AP√ìS O PRIMEIRO LOGIN!")
        else:
            print("\n‚úÖ Usu√°rio admin j√° existe")
        
        print("\nüéâ Banco de dados inicializado com sucesso!")
        print("\nüìù Informa√ß√µes:")
        print(f"   - Total de usu√°rios: {User.query.count()}")
        print(f"   - Total de bots: {Bot.query.count()}")
        print(f"   - Total de gateways: {Gateway.query.count()}")
        print(f"   - Total de pagamentos: {Payment.query.count()}")

if __name__ == '__main__':
    print("=" * 60)
    print("Bot Manager SaaS - Inicializa√ß√£o do Banco de Dados")
    print("=" * 60)
    init_database()
    print("=" * 60)



