"""
Migration: Adicionar Campos Demogr√°ficos
Para Analytics Avan√ßado de Gestor de Tr√°fego

Autor: Senior QI 502 + QI 500
Data: 2025-10-27
"""

from models import db, BotUser, Payment
import logging
from sqlalchemy import text

logger = logging.getLogger(__name__)

def add_demographic_fields():
    """Adiciona campos demogr√°ficos e de device para analytics avan√ßado"""
    
    try:
        logger.info("üîÑ Iniciando migration de campos demogr√°ficos...")
        
        # ‚úÖ 1. ADICIONAR EM BotUser
        logger.info("üìä Adicionando campos em bot_users...")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE bot_users 
                    ADD COLUMN customer_age INTEGER
                """))
                logger.info("‚úÖ customer_age adicionado em bot_users")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_age j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE bot_users 
                    ADD COLUMN customer_city VARCHAR(100)
                """))
                logger.info("‚úÖ customer_city adicionado em bot_users")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_city j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE bot_users 
                    ADD COLUMN customer_state VARCHAR(50)
                """))
                logger.info("‚úÖ customer_state adicionado em bot_users")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_state j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE bot_users 
                    ADD COLUMN customer_country VARCHAR(50) DEFAULT 'BR'
                """))
                logger.info("‚úÖ customer_country adicionado em bot_users")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_country j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE bot_users 
                    ADD COLUMN customer_gender VARCHAR(20)
                """))
                logger.info("‚úÖ customer_gender adicionado em bot_users")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_gender j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE bot_users 
                    ADD COLUMN device_type VARCHAR(20)
                """))
                logger.info("‚úÖ device_type adicionado em bot_users")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo device_type j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE bot_users 
                    ADD COLUMN os_type VARCHAR(50)
                """))
                logger.info("‚úÖ os_type adicionado em bot_users")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo os_type j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE bot_users 
                    ADD COLUMN browser VARCHAR(50)
                """))
                logger.info("‚úÖ browser adicionado em bot_users")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo browser j√° existe ou erro: {e}")
        
        # ‚úÖ 2. ADICIONAR EM Payment
        logger.info("üìä Adicionando campos em payments...")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE payments 
                    ADD COLUMN customer_age INTEGER
                """))
                logger.info("‚úÖ customer_age adicionado em payments")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_age j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE payments 
                    ADD COLUMN customer_city VARCHAR(100)
                """))
                logger.info("‚úÖ customer_city adicionado em payments")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_city j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE payments 
                    ADD COLUMN customer_state VARCHAR(50)
                """))
                logger.info("‚úÖ customer_state adicionado em payments")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_state j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE payments 
                    ADD COLUMN customer_country VARCHAR(50) DEFAULT 'BR'
                """))
                logger.info("‚úÖ customer_country adicionado em payments")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_country j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE payments 
                    ADD COLUMN customer_gender VARCHAR(20)
                """))
                logger.info("‚úÖ customer_gender adicionado em payments")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo customer_gender j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE payments 
                    ADD COLUMN device_type VARCHAR(20)
                """))
                logger.info("‚úÖ device_type adicionado em payments")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo device_type j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE payments 
                    ADD COLUMN os_type VARCHAR(50)
                """))
                logger.info("‚úÖ os_type adicionado em payments")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo os_type j√° existe ou erro: {e}")
        
        try:
            with db.engine.begin() as conn:
                conn.execute(text("""
                    ALTER TABLE payments 
                    ADD COLUMN browser VARCHAR(50)
                """))
                logger.info("‚úÖ browser adicionado em payments")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Campo browser j√° existe ou erro: {e}")
        
        logger.info("‚úÖ Migration conclu√≠da com sucesso!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Erro na migration: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    from app import app
    with app.app_context():
        add_demographic_fields()

