"""
Script de Migra√ß√£o: Adicionar √çndices Faltantes
============================================================================
CORRE√á√ÉO #8: Adiciona √≠ndices em campos frequentemente consultados

√çndices adicionados:
- User.is_banned (queries de listagem de usu√°rios)
- Bot.is_running (queries de bots ativos)
- Payment.status (queries de pagamentos por status)

Executar: python migrate_add_indexes.py
"""

from app import app, db
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def migrate():
    """Adiciona √≠ndices faltantes"""
    with app.app_context():
        try:
            logger.info("üîß Iniciando migra√ß√£o de √≠ndices...")
            
            # Conectar ao banco
            connection = db.engine.connect()
            
            # Lista de √≠ndices a criar
            indexes = [
                ("users", "is_banned", "idx_users_is_banned"),
                ("bots", "is_running", "idx_bots_is_running"),
                ("payments", "status", "idx_payments_status"),
            ]
            
            for table, column, index_name in indexes:
                try:
                    # Verificar se √≠ndice j√° existe
                    check_query = f"""
                        SELECT name FROM sqlite_master 
                        WHERE type='index' AND name='{index_name}'
                    """
                    result = connection.execute(db.text(check_query))
                    exists = result.fetchone() is not None
                    
                    if exists:
                        logger.info(f"‚è≠Ô∏è  √çndice {index_name} j√° existe")
                        continue
                    
                    # Criar √≠ndice
                    create_query = f"CREATE INDEX {index_name} ON {table}({column})"
                    connection.execute(db.text(create_query))
                    connection.commit()
                    
                    logger.info(f"‚úÖ √çndice {index_name} criado em {table}.{column}")
                    
                except Exception as e:
                    logger.error(f"‚ùå Erro ao criar √≠ndice {index_name}: {e}")
                    connection.rollback()
            
            connection.close()
            
            logger.info("‚úÖ Migra√ß√£o de √≠ndices conclu√≠da com sucesso!")
            
        except Exception as e:
            logger.error(f"‚ùå Erro na migra√ß√£o: {e}")
            raise

if __name__ == '__main__':
    print("=" * 70)
    print("MIGRA√á√ÉO: ADICIONAR √çNDICES FALTANTES")
    print("=" * 70)
    migrate()
    print("=" * 70)

